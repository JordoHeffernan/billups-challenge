{"ast":null,"code":"var _jsxFileName = \"/Users/jordanheffernan/projects/techEvals/billups/lizard-spock-client/src/components/Feedback.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport '../styles/Feedback.css';\nimport { winOrLose, rightOrWrong } from \"../utils/index\";\nexport const Feedback = props => {\n  let fakeProps = {\n    computerGuess: \"rock\",\n    timesRight: 0,\n    timesWrong: 0,\n    bestOf: 1,\n    lastGuessCorrect: null\n  }; // let { timesRight, timesWrong, bestOf, lastGuessCorrect } = this.props\n\n  let timesRight = fakeProps.timesRight,\n      timesWrong = fakeProps.timesWrong,\n      bestOf = fakeProps.bestOf,\n      lastGuessCorrect = fakeProps.lastGuessCorrect;\n  let status = winOrLose(timesRight, timesWrong, bestOf);\n  let result = rightOrWrong(lastGuessCorrect);\n  return React.createElement(\"div\", {\n    id: \"feedback\",\n    role: \"status\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Win or Lose: \", status), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Computer guessed \", fakeProps.computerGuess, \" you were \", result));\n}; // const mapStateToProps = state => ({\n//   timesRight: state.timesRight,\n//   timesWrong: state.timesWrong,\n//   bestOf: state.bestOf,\n//   result: state.result\n// })\n\nexport default Feedback; // export default connect(mapStateToProps)(Feedback)","map":{"version":3,"sources":["/Users/jordanheffernan/projects/techEvals/billups/lizard-spock-client/src/components/Feedback.jsx"],"names":["React","connect","winOrLose","rightOrWrong","Feedback","props","fakeProps","computerGuess","timesRight","timesWrong","bestOf","lastGuessCorrect","status","result"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,wBAAP;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,gBAAxC;AAEA,OAAO,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAC/B,MAAIC,SAAS,GAAG;AAAEC,IAAAA,aAAa,EAAE,MAAjB;AAAyBC,IAAAA,UAAU,EAAE,CAArC;AAAwCC,IAAAA,UAAU,EAAE,CAApD;AAAuDC,IAAAA,MAAM,EAAE,CAA/D;AAAkEC,IAAAA,gBAAgB,EAAE;AAApF,GAAhB,CAD+B,CAE/B;;AAF+B,MAGzBH,UAHyB,GAG4BF,SAH5B,CAGzBE,UAHyB;AAAA,MAGbC,UAHa,GAG4BH,SAH5B,CAGbG,UAHa;AAAA,MAGDC,MAHC,GAG4BJ,SAH5B,CAGDI,MAHC;AAAA,MAGOC,gBAHP,GAG4BL,SAH5B,CAGOK,gBAHP;AAK/B,MAAIC,MAAM,GAAGV,SAAS,CAACM,UAAD,EAAaC,UAAb,EAAyBC,MAAzB,CAAtB;AACA,MAAIG,MAAM,GAAGV,YAAY,CAACQ,gBAAD,CAAzB;AACA,SACE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,iBAAU,WAHZ;AAIE,mBAAY,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgBC,MADhB,CANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACoBN,SAAS,CAACC,aAD9B,gBACuDM,MADvD,CATF,CADF;AAeD,CAtBM,C,CAwBP;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeT,QAAf,C,CACA","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport '../styles/Feedback.css';\nimport { winOrLose, rightOrWrong } from \"../utils/index\"\n\nexport const Feedback = props => {\n  let fakeProps = { computerGuess: \"rock\", timesRight: 0, timesWrong: 0, bestOf: 1, lastGuessCorrect: null }\n  // let { timesRight, timesWrong, bestOf, lastGuessCorrect } = this.props\n  let { timesRight, timesWrong, bestOf, lastGuessCorrect } = fakeProps\n\n  let status = winOrLose(timesRight, timesWrong, bestOf)\n  let result = rightOrWrong(lastGuessCorrect)\n  return (\n    <div\n      id=\"feedback\"\n      role=\"status\"\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n    >\n      <h2>\n        Win or Lose: {status}\n      </h2>\n      <h2>\n        Computer guessed {fakeProps.computerGuess} you were {result}\n      </h2>\n    </div>\n  );\n}\n\n// const mapStateToProps = state => ({\n//   timesRight: state.timesRight,\n//   timesWrong: state.timesWrong,\n//   bestOf: state.bestOf,\n//   result: state.result\n// })\n\nexport default Feedback\n// export default connect(mapStateToProps)(Feedback)"]},"metadata":{},"sourceType":"module"}