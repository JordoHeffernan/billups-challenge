{"ast":null,"code":"var _jsxFileName = \"/Users/jordanheffernan/projects/techEvals/billups/lizard-spock-client/src/components/GuessSection.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport HowToPlay from \"./HowToPlay\";\nimport { setBestOf, handleInput, getGuess } from '../store/actions';\nimport '../styles/GuessSection.css';\nexport class GuessSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noPick: false\n    };\n  }\n\n  onSelect(e) {\n    e.preventDefault();\n    const value = e.target.value;\n    this.props.dispatch(setBestOf(value));\n  }\n\n  onChange(e) {\n    e.preventDefault();\n    const value = e.target.value;\n    this.props.dispatch(handleInput(value));\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!this.props.state.humanGuess) {\n      console.log(\"make a pick!\");\n      this.setState({\n        noPick: true\n      });\n      return;\n    }\n\n    this.props.dispatch(getGuess());\n  }\n\n  render() {\n    let _this$props$state = this.props.state,\n        helpOpen = _this$props$state.helpOpen,\n        winStatus = _this$props$state.winStatus;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, helpOpen && React.createElement(HowToPlay, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), !helpOpen && winStatus === \"Make a guess.\" && React.createElement(\"form\", {\n      onSubmit: e => this.onSubmit(e),\n      className: \"guessSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Best Of\"), React.createElement(\"select\", {\n      name: \"bestOf\",\n      id: \"bestOf\",\n      value: this.props.state.bestOf,\n      onChange: e => this.onSelect(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"1 Round\"), React.createElement(\"option\", {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"3 Rounds\"), React.createElement(\"option\", {\n      value: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"5 Rounds\"), React.createElement(\"option\", {\n      value: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"7 Rounds\")), React.createElement(\"button\", {\n      type: \"button\",\n      name: \"rock\",\n      id: \"rock\",\n      className: \"guessButton\",\n      value: \"rock\",\n      onClick: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Rock\"), React.createElement(\"button\", {\n      type: \"button\",\n      name: \"paper\",\n      id: \"paper\",\n      className: \"guessButton\",\n      value: \"paper\",\n      onClick: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Paper\"), React.createElement(\"button\", {\n      type: \"button\",\n      name: \"scissors\",\n      id: \"scissors\",\n      className: \"guessButton\",\n      value: \"scissors\",\n      onClick: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Scissors\"), React.createElement(\"button\", {\n      type: \"button\",\n      name: \"lizard\",\n      id: \"lizard\",\n      className: \"guessButton\",\n      value: \"lizard\",\n      onClick: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Lizard\"), React.createElement(\"button\", {\n      type: \"button\",\n      name: \"spock\",\n      id: \"spock\",\n      className: \"guessButton\",\n      value: \"spock\",\n      onClick: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Spock\"), React.createElement(\"button\", {\n      type: \"submit\",\n      name: \"submit\",\n      id: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Submit Guess\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  state: state\n}); // export default GuessSection\n\n\nexport default connect(mapStateToProps)(GuessSection);","map":{"version":3,"sources":["/Users/jordanheffernan/projects/techEvals/billups/lizard-spock-client/src/components/GuessSection.jsx"],"names":["React","connect","HowToPlay","setBestOf","handleInput","getGuess","GuessSection","Component","constructor","props","state","noPick","onSelect","e","preventDefault","value","target","dispatch","onChange","onSubmit","humanGuess","console","log","setState","render","helpOpen","winStatus","bestOf","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport HowToPlay from \"./HowToPlay\"\nimport { setBestOf, handleInput, getGuess } from '../store/actions';\n\nimport '../styles/GuessSection.css';\n\nexport class GuessSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noPick: false\n    };\n  }\n  onSelect(e) {\n    e.preventDefault();\n    const value = e.target.value;\n    this.props.dispatch(setBestOf(value));\n  }\n  onChange(e) {\n    e.preventDefault();\n    const value = e.target.value;\n    this.props.dispatch(handleInput(value));\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    if (!this.props.state.humanGuess) {\n      console.log(\"make a pick!\")\n      this.setState({ noPick: true })\n      return;\n    }\n    this.props.dispatch(getGuess());\n  }\n\n  render() {\n    let { helpOpen, winStatus } = this.props.state\n    return (\n      <div>\n        {helpOpen && <HowToPlay />}\n        {!helpOpen && (winStatus === \"Make a guess.\") &&\n          < form onSubmit={e => this.onSubmit(e)} className=\"guessSection\" >\n            <label>\n              Best Of\n            </label>\n            <select\n              name=\"bestOf\"\n              id=\"bestOf\"\n              value={this.props.state.bestOf}\n              onChange={e => this.onSelect(e)}\n            >\n              <option value={1}>1 Round</option>\n              <option value={3}>3 Rounds</option>\n              <option value={5}>5 Rounds</option>\n              <option value={7}>7 Rounds</option>\n            </select>\n            <button\n              type=\"button\"\n              name=\"rock\"\n              id=\"rock\"\n              className=\"guessButton\"\n              value=\"rock\"\n              onClick={e => this.onChange(e)}\n            >\n              Rock\n        </button>\n            <button\n              type=\"button\"\n              name=\"paper\"\n              id=\"paper\"\n              className=\"guessButton\"\n              value=\"paper\"\n              onClick={e => this.onChange(e)}\n            >\n              Paper\n        </button>\n            <button\n              type=\"button\"\n              name=\"scissors\"\n              id=\"scissors\"\n              className=\"guessButton\"\n              value=\"scissors\"\n              onClick={e => this.onChange(e)}\n            >\n              Scissors\n        </button>\n            <button\n              type=\"button\"\n              name=\"lizard\"\n              id=\"lizard\"\n              className=\"guessButton\"\n              value=\"lizard\"\n              onClick={e => this.onChange(e)}\n            >\n              Lizard\n        </button>\n            <button\n              type=\"button\"\n              name=\"spock\"\n              id=\"spock\"\n              className=\"guessButton\"\n              value=\"spock\"\n              onClick={e => this.onChange(e)}\n            >\n              Spock\n        </button>\n\n            <button type=\"submit\" name=\"submit\" id=\"submit\" >\n              Submit Guess\n          </button>\n          </form >}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state: state\n})\n\n// export default GuessSection\nexport default connect(mapStateToProps)(GuessSection)"]},"metadata":{},"sourceType":"module"}