{"ast":null,"code":"export const RESTART_GAME = 'RESTART_GAME';\nexport const restartGame = () => ({\n  type: RESTART_GAME\n});\nexport const TOGGLE_HELP = 'TOGGLE_HELP';\nexport const toggleHelp = () => ({\n  type: TOGGLE_HELP\n});\nexport const HANDLE_INPUT = 'HANDLE_INPUT';\nexport const handleInput = value => ({\n  type: HANDLE_INPUT,\n  payload: value\n});\nexport const SET_BEST_OF = 'SET_BEST_OF';\nexport const setBestOf = value => ({\n  type: SET_BEST_OF,\n  payload: value\n});\nexport const GET_GUESS_REQUEST = 'GET_GUESS_REQUEST';\nexport const getGuessRequest = () => ({\n  type: GET_GUESS_REQUEST\n});\nexport const GET_GUESS_SUCCESS = 'GET_GUESS_SUCCESS';\nexport const getGuessSuccess = guess => ({\n  type: GET_GUESS_SUCCESS,\n  payload: guess\n});\nexport const GET_GUESS_FAILURE = 'GET_GUESS_FAILURE';\nexport const getGuessFailure = error => ({\n  type: GET_GUESS_FAILURE,\n  error\n});\nexport const getGuess = () => dispatch => {\n  dispatch(getGuessRequest());\n  return fetch('https://codechallenge.boohma.com/choice').then(res => {\n    if (!res.ok) {\n      return Promise.reject(res.statusText);\n    }\n\n    return res.json();\n  }).then(guess => {\n    return dispatch(getGuessSuccess(guess));\n  }).catch(err => {\n    return dispatch(getGuessFailure(err));\n  });\n};","map":{"version":3,"sources":["/Users/jordanheffernan/projects/techEvals/billups/lizard-spock-client/src/store/actions/index.js"],"names":["RESTART_GAME","restartGame","type","TOGGLE_HELP","toggleHelp","HANDLE_INPUT","handleInput","value","payload","SET_BEST_OF","setBestOf","GET_GUESS_REQUEST","getGuessRequest","GET_GUESS_SUCCESS","getGuessSuccess","guess","GET_GUESS_FAILURE","getGuessFailure","error","getGuess","dispatch","fetch","then","res","ok","Promise","reject","statusText","json","catch","err"],"mappings":"AAEA,OAAO,MAAMA,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,WAAW,GAAG,OAAO;AAChCC,EAAAA,IAAI,EAAEF;AAD0B,CAAP,CAApB;AAIP,OAAO,MAAMG,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,UAAU,GAAG,OAAO;AAC/BF,EAAAA,IAAI,EAAEC;AADyB,CAAP,CAAnB;AAIP,OAAO,MAAME,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,WAAW,GAAGC,KAAK,KAAK;AACnCL,EAAAA,IAAI,EAAEG,YAD6B;AAEnCG,EAAAA,OAAO,EAAED;AAF0B,CAAL,CAAzB;AAKP,OAAO,MAAME,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,SAAS,GAAGH,KAAK,KAAK;AACjCL,EAAAA,IAAI,EAAEO,WAD2B;AAEjCD,EAAAA,OAAO,EAAED;AAFwB,CAAL,CAAvB;AAKP,OAAO,MAAMI,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,eAAe,GAAG,OAAO;AACpCV,EAAAA,IAAI,EAAES;AAD8B,CAAP,CAAxB;AAGP,OAAO,MAAME,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACvCb,EAAAA,IAAI,EAAEW,iBADiC;AAEvCL,EAAAA,OAAO,EAAEO;AAF8B,CAAL,CAA7B;AAIP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACvChB,EAAAA,IAAI,EAAEc,iBADiC;AAEvCE,EAAAA;AAFuC,CAAL,CAA7B;AAKP,OAAO,MAAMC,QAAQ,GAAG,MAAMC,QAAQ,IAAI;AACxCA,EAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;AACA,SAAOS,KAAK,CAAC,yCAAD,CAAL,CACJC,IADI,CACCC,GAAG,IAAI;AACX,QAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,aAAOC,OAAO,CAACC,MAAR,CAAeH,GAAG,CAACI,UAAnB,CAAP;AACD;;AACD,WAAOJ,GAAG,CAACK,IAAJ,EAAP;AACD,GANI,EAOJN,IAPI,CAOCP,KAAK,IAAI;AACb,WAAOK,QAAQ,CAACN,eAAe,CAACC,KAAD,CAAhB,CAAf;AACD,GATI,EAUJc,KAVI,CAUEC,GAAG,IAAI;AACZ,WAAOV,QAAQ,CAACH,eAAe,CAACa,GAAD,CAAhB,CAAf;AACD,GAZI,CAAP;AAaD,CAfM","sourcesContent":["\n\nexport const RESTART_GAME = 'RESTART_GAME';\nexport const restartGame = () => ({\n  type: RESTART_GAME\n});\n\nexport const TOGGLE_HELP = 'TOGGLE_HELP';\nexport const toggleHelp = () => ({\n  type: TOGGLE_HELP\n});\n\nexport const HANDLE_INPUT = 'HANDLE_INPUT';\nexport const handleInput = value => ({\n  type: HANDLE_INPUT,\n  payload: value\n});\n\nexport const SET_BEST_OF = 'SET_BEST_OF';\nexport const setBestOf = value => ({\n  type: SET_BEST_OF,\n  payload: value\n});\n\nexport const GET_GUESS_REQUEST = 'GET_GUESS_REQUEST';\nexport const getGuessRequest = () => ({\n  type: GET_GUESS_REQUEST\n});\nexport const GET_GUESS_SUCCESS = 'GET_GUESS_SUCCESS';\nexport const getGuessSuccess = guess => ({\n  type: GET_GUESS_SUCCESS,\n  payload: guess\n});\nexport const GET_GUESS_FAILURE = 'GET_GUESS_FAILURE';\nexport const getGuessFailure = error => ({\n  type: GET_GUESS_FAILURE,\n  error\n});\n\nexport const getGuess = () => dispatch => {\n  dispatch(getGuessRequest());\n  return fetch('https://codechallenge.boohma.com/choice')\n    .then(res => {\n      if (!res.ok) {\n        return Promise.reject(res.statusText);\n      }\n      return res.json();\n    })\n    .then(guess => {\n      return dispatch(getGuessSuccess(guess));\n    })\n    .catch(err => {\n      return dispatch(getGuessFailure(err));\n    });\n};"]},"metadata":{},"sourceType":"module"}