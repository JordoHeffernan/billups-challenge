{"ast":null,"code":"var _jsxFileName = \"/Users/jordanheffernan/projects/techEvals/billups/lizard-spock-client/src/components/Feedback.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport '../styles/Feedback.css';\nimport { winOrLose } from \"../utils/index\";\nexport const Feedback = props => {\n  // let fakeProps = { timesRight: 0, timesWrong: 0, bestOf: 1, lastGuessCorrect: null }\n  // let { timesRight, timesWrong, bestOf, lastGuessCorrect } = fakeProps\n  let _props$state = props.state,\n      timesRight = _props$state.timesRight,\n      timesWrong = _props$state.timesWrong,\n      bestOf = _props$state.bestOf,\n      computerGuess = _props$state.computerGuess,\n      lastGuess = _props$state.lastGuess;\n  let status = winOrLose(timesRight, timesWrong, bestOf);\n  return React.createElement(\"div\", {\n    id: \"feedback\",\n    role: \"status\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Computer Guessed \", computerGuess, \" you \", lastGuess), status && React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Win or Lose: \", status));\n};\n\nconst mapStateToProps = state => ({\n  state: state\n});\n\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"sources":["/Users/jordanheffernan/projects/techEvals/billups/lizard-spock-client/src/components/Feedback.jsx"],"names":["React","connect","winOrLose","Feedback","props","state","timesRight","timesWrong","bestOf","computerGuess","lastGuess","status","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,wBAAP;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,OAAO,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAC/B;AACA;AAF+B,qBAGoCA,KAAK,CAACC,KAH1C;AAAA,MAGzBC,UAHyB,gBAGzBA,UAHyB;AAAA,MAGbC,UAHa,gBAGbA,UAHa;AAAA,MAGDC,MAHC,gBAGDA,MAHC;AAAA,MAGOC,aAHP,gBAGOA,aAHP;AAAA,MAGsBC,SAHtB,gBAGsBA,SAHtB;AAK/B,MAAIC,MAAM,GAAGT,SAAS,CAACI,UAAD,EAAaC,UAAb,EAAyBC,MAAzB,CAAtB;AACA,SACE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,iBAAU,WAHZ;AAIE,mBAAY,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACoBC,aADpB,WACwCC,SADxC,CANF,EASGC,MAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACKA,MADL,CATb,CADF;AAeD,CArBM;;AAuBP,MAAMC,eAAe,GAAGP,KAAK,KAAK;AAChCA,EAAAA,KAAK,EAAEA;AADyB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACW,eAAD,CAAP,CAAyBT,QAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport '../styles/Feedback.css';\nimport { winOrLose } from \"../utils/index\"\n\nexport const Feedback = props => {\n  // let fakeProps = { timesRight: 0, timesWrong: 0, bestOf: 1, lastGuessCorrect: null }\n  // let { timesRight, timesWrong, bestOf, lastGuessCorrect } = fakeProps\n  let { timesRight, timesWrong, bestOf, computerGuess, lastGuess } = props.state\n\n  let status = winOrLose(timesRight, timesWrong, bestOf)\n  return (\n    <div\n      id=\"feedback\"\n      role=\"status\"\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n    >\n      <h2>\n        Computer Guessed {computerGuess} you {lastGuess}\n      </h2>\n      {status && <h2>\n        Win or Lose: {status}\n      </h2>}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  state: state\n})\n\nexport default connect(mapStateToProps)(Feedback)"]},"metadata":{},"sourceType":"module"}